version: "3.8"

services:
  # Database service
  database:
    container_name: adverity-transformer-challenge-database
    image: postgres:12-alpine
    environment:
      POSTGRES_DB: transformer
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Async tasks broker service
  redis:
    container_name: adverity-transformer-challenge-redis
    image: redis:6
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Async tasks worker
  celery:
    container_name: adverity-transformer-challenge-celery
    build:
      context: ${PWD}/backend/
      dockerfile: Dockerfile.development
    image: adverity-transformer-challenge-backend
    environment:
      BROKER_URL: redis://redis:6379
      DATABASE_HOST: database
      DATABASE_USER: postgres
      DATABASE_NAME: transformer
    command: watchmedo auto-restart --pattern '*.py' --signal SIGINT --recursive -- celery -A app.celery_worker worker -l debug
    volumes:
      - ${PWD}/backend/:/home/user/backend/:delegated

  # Main backend application
  backend:
    container_name: adverity-transformer-challenge-backend
    build:
      context: ${PWD}/backend/
      dockerfile: Dockerfile.development
    command: uvicorn app.main:app --host 0.0.0.0 --reload
    image: adverity-transformer-challenge-backend
    ports:
      - "8000:8000"
    environment:
      BROKER_URL: redis://redis:6379
      DATABASE_HOST: database
      DATABASE_USER: postgres
      DATABASE_NAME: transformer
    volumes:
      - ${PWD}/backend/:/home/user/backend/:delegated
      - ${PWD}/frontend/:/home/user/frontend/:delegated
    depends_on:
      - database
      - redis
      - celery
    restart: on-failure
  flower:
    container_name: flower
    build:
      context: ${PWD}/backend/
      dockerfile: Dockerfile.development
    command: celery -A app.celery_worker flower --port=5555
    ports:
      - 5556:5555
    environment:
      - BROKER_URL=redis://redis:6379
      - RESULT_BACKEND=redis://redis:6379
    depends_on:
      - backend
      - redis
      - celery
